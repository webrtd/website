/*  ::

    :: Theme        : Jets
    :: Theme URI    : http://labs.funcoders.com/html/Jets

    :: File         : theme.js
    :: About        : Main js file
    :: Version      : 1.4.4

    NOTE!!! Do not edit this file. Use another script file for changing this or creating new scripts. !!!

:: */
var Jets = {

    extend: function() {

        /*  :: Extentions to jQuery :: */
        var n = navigator.userAgent;
        $.browser         = {};
        $.browser.msie    = false;
        $.browser.version = 0;

        if (n.indexOf(" MSIE") != -1 || n.indexOf(" rv:11") != -1) {
            if (n.indexOf(" MSIE 9.") != -1) {
                $.browser.msie = 'ie9';
            } else if (n.indexOf(" MSIE 10.") != -1) {
                $.browser.msie = 'ie10';
            } else if (n.indexOf(" rv:11") != -1) {
                $.browser.msie = 'ie11';
            }
        }

        $.mobile       = {};
        $.mobile.is    = (/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(n.toLowerCase()));
        $.mobile.width = 992;

        /*  :: Extentions to jQuery functions :: */
        $.fn.resizeComplete = function(func, ms, method) {
            var timer = 0;
            this.resize(function() {
                clearTimeout(timer);
                timer = setTimeout(func, ms);
            });
            if (method === 'load') {
                this.on('load', func);
            } else if (method === 'ready') {
                func();
            }
        };
        $.fn.isOnScreen = function(f, ratio) {

            var $that   = this,
                win     = $(window);

            ratio = (ratio !== undefined) ? ratio : 0.9;

            win.scroll(function() {

                var viewport = {
                    top : win.scrollTop(),
                    left : win.scrollLeft()
                };

                viewport.right = viewport.left + win.width() * ratio;
                viewport.bottom = viewport.top + win.height() * ratio;

                return $that.each(function() {

                    if ($(this).data('isOnScreen') === undefined) {

                        var bounds = $(this).offset();
                        bounds.right = bounds.left + $(this).outerWidth();
                        bounds.bottom = bounds.top + $(this).outerHeight();

                        if (!(viewport.right < bounds.left || viewport.left > bounds.right || viewport.bottom < bounds.top || viewport.top > bounds.bottom - $(this).outerHeight())) {

                            f.call($(this));
                            $(this).data('isOnScreen', true);

                        }
                    }
                });

            });
        };

    },
    library: function() {

        // SmoothScroll for websites v1.2.1
        (function(){function c(){var e=false;if(e){N("keydown",y)}if(t.keyboardSupport&&!e){T("keydown",y)}}function h(){if(!document.body)return;var e=document.body;var i=document.documentElement;var a=window.innerHeight;var f=e.scrollHeight;o=document.compatMode.indexOf("CSS")>=0?i:e;u=e;c();s=true;if(top!=self){r=true}else if(f>a&&(e.offsetHeight<=a||i.offsetHeight<=a)){i.style.height="auto";setTimeout(refresh,10);if(o.offsetHeight<=a){var l=document.createElement("div");l.style.clear="both";e.appendChild(l)}}if(!t.fixedBackground&&!n){e.style.backgroundAttachment="scroll";i.style.backgroundAttachment="scroll"}}function m(e,n,r,i){i||(i=1e3);k(n,r);if(t.accelerationMax!=1){var s=+(new Date);var o=s-v;if(o<t.accelerationDelta){var u=(1+30/o)/2;if(u>1){u=Math.min(u,t.accelerationMax);n*=u;r*=u}}v=+(new Date)}p.push({x:n,y:r,lastX:n<0?.99:-.99,lastY:r<0?.99:-.99,start:+(new Date)});if(d){return}var a=e===document.body;var f=function(s){var o=+(new Date);var u=0;var l=0;for(var c=0;c<p.length;c++){var h=p[c];var v=o-h.start;var m=v>=t.animationTime;var g=m?1:v/t.animationTime;if(t.pulseAlgorithm){g=D(g)}var y=h.x*g-h.lastX>>0;var b=h.y*g-h.lastY>>0;u+=y;l+=b;h.lastX+=y;h.lastY+=b;if(m){p.splice(c,1);c--}}if(a){window.scrollBy(u,l)}else{if(u)e.scrollLeft+=u;if(l)e.scrollTop+=l}if(!n&&!r){p=[]}if(p.length){M(f,e,i/t.frameRate+1)}else{d=false}};M(f,e,0);d=true}function g(e){if(!s){h()}var n=e.target;var r=x(n);if(!r||e.defaultPrevented||C(u,"embed")||C(n,"embed")&&/\.pdf/i.test(n.src)){return true}var i=e.wheelDeltaX||0;var o=e.wheelDeltaY||0;if(!i&&!o){o=e.wheelDelta||0}if(!t.touchpadSupport&&A(o)){return true}if(Math.abs(i)>1.2){i*=t.stepSize/120}if(Math.abs(o)>1.2){o*=t.stepSize/120}m(r,-i,-o);e.preventDefault()}function y(e){var n=e.target;var r=e.ctrlKey||e.altKey||e.metaKey||e.shiftKey&&e.keyCode!==l.spacebar;if(/input|textarea|select|embed/i.test(n.nodeName)||n.isContentEditable||e.defaultPrevented||r){return true}if(C(n,"button")&&e.keyCode===l.spacebar){return true}var i,s=0,o=0;var a=x(u);var f=a.clientHeight;if(a==document.body){f=window.innerHeight}switch(e.keyCode){case l.up:o=-t.arrowScroll;break;case l.down:o=t.arrowScroll;break;case l.spacebar:i=e.shiftKey?1:-1;o=-i*f*.9;break;case l.pageup:o=-f*.9;break;case l.pagedown:o=f*.9;break;case l.home:o=-a.scrollTop;break;case l.end:var c=a.scrollHeight-a.scrollTop-f;o=c>0?c+10:0;break;case l.left:s=-t.arrowScroll;break;case l.right:s=t.arrowScroll;break;default:return true}m(a,s,o);e.preventDefault()}function b(e){u=e.target}function S(e,t){for(var n=e.length;n--;)w[E(e[n])]=t;return t}function x(e){var t=[];var n=o.scrollHeight;do{var i=w[E(e)];if(i){return S(t,i)}t.push(e);if(n===e.scrollHeight){if(!r||o.clientHeight+10<n){return S(t,document.body)}}else if(e.clientHeight+10<e.scrollHeight){overflow=getComputedStyle(e,"").getPropertyValue("overflow-y");if(overflow==="scroll"||overflow==="auto"){return S(t,e)}}}while(e=e.parentNode)}function T(e,t,n){window.addEventListener(e,t,n||false)}function N(e,t,n){window.removeEventListener(e,t,n||false)}function C(e,t){return(e.nodeName||"").toLowerCase()===t.toLowerCase()}function k(e,t){e=e>0?1:-1;t=t>0?1:-1;if(i.x!==e||i.y!==t){i.x=e;i.y=t;p=[];v=0}}function A(e){if(!e)return;e=Math.abs(e);f.push(e);f.shift();clearTimeout(L);var t=f[0]==f[1]&&f[1]==f[2];var n=O(f[0],120)&&O(f[1],120)&&O(f[2],120);return!(t||n)}function O(e,t){return Math.floor(e/t)==e/t}function _(e){var n,r,i;e=e*t.pulseScale;if(e<1){n=e-(1-Math.exp(-e))}else{r=Math.exp(-1);e-=1;i=1-Math.exp(-e);n=r+i*(1-r)}return n*t.pulseNormalize}function D(e){if(e>=1)return 1;if(e<=0)return 0;if(t.pulseNormalize==1){t.pulseNormalize/=_(1)}return _(e)}var e={frameRate:150,animationTime:400,stepSize:120,pulseAlgorithm:true,pulseScale:8,pulseNormalize:1,accelerationDelta:20,accelerationMax:1,keyboardSupport:true,arrowScroll:50,touchpadSupport:true,fixedBackground:true,excluded:""};var t=e;var n=false;var r=false;var i={x:0,y:0};var s=false;var o=document.documentElement;var u;var a;var f=[120,120,120];var l={left:37,up:38,right:39,down:40,spacebar:32,pageup:33,pagedown:34,end:35,home:36};var t=e;var p=[];var d=false;var v=+(new Date);var w={};setInterval(function(){w={}},10*1e3);var E=function(){var e=0;return function(t){return t.uniqueID||(t.uniqueID=e++)}}();var L;var M=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||function(e,t,n){window.setTimeout(e,n||1e3/60)}}();var P=/chrome/i.test(window.navigator.userAgent);var H="onmousewheel"in document;if(H&&P){T("mousedown",b);T("mousewheel",g);T("load",h)}})()

        // jQuery Easing v1.3 - http://gsgd.co.uk/sandbox/jquery/easing/
        jQuery.easing.jswing=jQuery.easing.swing;jQuery.extend(jQuery.easing,{def:"easeOutQuad",swing:function(e,f,a,h,g){return jQuery.easing[jQuery.easing.def](e,f,a,h,g)},easeInQuad:function(e,f,a,h,g){return h*(f/=g)*f+a},easeOutQuad:function(e,f,a,h,g){return -h*(f/=g)*(f-2)+a},easeInOutQuad:function(e,f,a,h,g){if((f/=g/2)<1){return h/2*f*f+a}return -h/2*((--f)*(f-2)-1)+a},easeInCubic:function(e,f,a,h,g){return h*(f/=g)*f*f+a},easeOutCubic:function(e,f,a,h,g){return h*((f=f/g-1)*f*f+1)+a},easeInOutCubic:function(e,f,a,h,g){if((f/=g/2)<1){return h/2*f*f*f+a}return h/2*((f-=2)*f*f+2)+a},easeInQuart:function(e,f,a,h,g){return h*(f/=g)*f*f*f+a},easeOutQuart:function(e,f,a,h,g){return -h*((f=f/g-1)*f*f*f-1)+a},easeInOutQuart:function(e,f,a,h,g){if((f/=g/2)<1){return h/2*f*f*f*f+a}return -h/2*((f-=2)*f*f*f-2)+a},easeInQuint:function(e,f,a,h,g){return h*(f/=g)*f*f*f*f+a},easeOutQuint:function(e,f,a,h,g){return h*((f=f/g-1)*f*f*f*f+1)+a},easeInOutQuint:function(e,f,a,h,g){if((f/=g/2)<1){return h/2*f*f*f*f*f+a}return h/2*((f-=2)*f*f*f*f+2)+a},easeInSine:function(e,f,a,h,g){return -h*Math.cos(f/g*(Math.PI/2))+h+a},easeOutSine:function(e,f,a,h,g){return h*Math.sin(f/g*(Math.PI/2))+a},easeInOutSine:function(e,f,a,h,g){return -h/2*(Math.cos(Math.PI*f/g)-1)+a},easeInExpo:function(e,f,a,h,g){return(f==0)?a:h*Math.pow(2,10*(f/g-1))+a},easeOutExpo:function(e,f,a,h,g){return(f==g)?a+h:h*(-Math.pow(2,-10*f/g)+1)+a},easeInOutExpo:function(e,f,a,h,g){if(f==0){return a}if(f==g){return a+h}if((f/=g/2)<1){return h/2*Math.pow(2,10*(f-1))+a}return h/2*(-Math.pow(2,-10*--f)+2)+a},easeInCirc:function(e,f,a,h,g){return -h*(Math.sqrt(1-(f/=g)*f)-1)+a},easeOutCirc:function(e,f,a,h,g){return h*Math.sqrt(1-(f=f/g-1)*f)+a},easeInOutCirc:function(e,f,a,h,g){if((f/=g/2)<1){return -h/2*(Math.sqrt(1-f*f)-1)+a}return h/2*(Math.sqrt(1-(f-=2)*f)+1)+a},easeInElastic:function(f,h,e,l,k){var i=1.70158;var j=0;var g=l;if(h==0){return e}if((h/=k)==1){return e+l}if(!j){j=k*0.3}if(g<Math.abs(l)){g=l;var i=j/4}else{var i=j/(2*Math.PI)*Math.asin(l/g)}return -(g*Math.pow(2,10*(h-=1))*Math.sin((h*k-i)*(2*Math.PI)/j))+e},easeOutElastic:function(f,h,e,l,k){var i=1.70158;var j=0;var g=l;if(h==0){return e}if((h/=k)==1){return e+l}if(!j){j=k*0.3}if(g<Math.abs(l)){g=l;var i=j/4}else{var i=j/(2*Math.PI)*Math.asin(l/g)}return g*Math.pow(2,-10*h)*Math.sin((h*k-i)*(2*Math.PI)/j)+l+e},easeInOutElastic:function(f,h,e,l,k){var i=1.70158;var j=0;var g=l;if(h==0){return e}if((h/=k/2)==2){return e+l}if(!j){j=k*(0.3*1.5)}if(g<Math.abs(l)){g=l;var i=j/4}else{var i=j/(2*Math.PI)*Math.asin(l/g)}if(h<1){return -0.5*(g*Math.pow(2,10*(h-=1))*Math.sin((h*k-i)*(2*Math.PI)/j))+e}return g*Math.pow(2,-10*(h-=1))*Math.sin((h*k-i)*(2*Math.PI)/j)*0.5+l+e},easeInBack:function(e,f,a,i,h,g){if(g==undefined){g=1.70158}return i*(f/=h)*f*((g+1)*f-g)+a},easeOutBack:function(e,f,a,i,h,g){if(g==undefined){g=1.70158}return i*((f=f/h-1)*f*((g+1)*f+g)+1)+a},easeInOutBack:function(e,f,a,i,h,g){if(g==undefined){g=1.70158}if((f/=h/2)<1){return i/2*(f*f*(((g*=(1.525))+1)*f-g))+a}return i/2*((f-=2)*f*(((g*=(1.525))+1)*f+g)+2)+a},easeInBounce:function(e,f,a,h,g){return h-jQuery.easing.easeOutBounce(e,g-f,0,h,g)+a},easeOutBounce:function(e,f,a,h,g){if((f/=g)<(1/2.75)){return h*(7.5625*f*f)+a}else{if(f<(2/2.75)){return h*(7.5625*(f-=(1.5/2.75))*f+0.75)+a}else{if(f<(2.5/2.75)){return h*(7.5625*(f-=(2.25/2.75))*f+0.9375)+a}else{return h*(7.5625*(f-=(2.625/2.75))*f+0.984375)+a}}}},easeInOutBounce:function(e,f,a,h,g){if(f<g/2){return jQuery.easing.easeInBounce(e,f*2,0,h,g)*0.5+a}return jQuery.easing.easeOutBounce(e,f*2-g,0,h,g)*0.5+h*0.5+a}});

        // TouchSwipe 1.6 - https://github.com/mattbryson/TouchSwipe-Jquery-Plugin
        (function(a){if(typeof define==="function"&&define.amd&&define.amd.jQuery){define(["jquery"],a)}else{a(jQuery)}}(function(e){var o="left",n="right",d="up",v="down",c="in",w="out",l="none",r="auto",k="swipe",s="pinch",x="tap",i="doubletap",b="longtap",A="horizontal",t="vertical",h="all",q=10,f="start",j="move",g="end",p="cancel",a="ontouchstart" in window,y="TouchSwipe";var m={fingers:1,threshold:75,cancelThreshold:null,pinchThreshold:20,maxTimeThreshold:null,fingerReleaseThreshold:250,longTapThreshold:500,doubleTapThreshold:200,swipe:null,swipeLeft:null,swipeRight:null,swipeUp:null,swipeDown:null,swipeStatus:null,pinchIn:null,pinchOut:null,pinchStatus:null,click:null,tap:null,doubleTap:null,longTap:null,triggerOnTouchEnd:true,triggerOnTouchLeave:false,allowPageScroll:"auto",fallbackToMouseEvents:true,excludedElements:"label, button, input, select, textarea, a, .noSwipe"};e.fn.swipe=function(D){var C=e(this),B=C.data(y);if(B&&typeof D==="string"){if(B[D]){return B[D].apply(this,Array.prototype.slice.call(arguments,1))}else{e.error("Method "+D+" does not exist on jQuery.swipe")}}else{if(!B&&(typeof D==="object"||!D)){return u.apply(this,arguments)}}return C};e.fn.swipe.defaults=m;e.fn.swipe.phases={PHASE_START:f,PHASE_MOVE:j,PHASE_END:g,PHASE_CANCEL:p};e.fn.swipe.directions={LEFT:o,RIGHT:n,UP:d,DOWN:v,IN:c,OUT:w};e.fn.swipe.pageScroll={NONE:l,HORIZONTAL:A,VERTICAL:t,AUTO:r};e.fn.swipe.fingers={ONE:1,TWO:2,THREE:3,ALL:h};function u(B){if(B&&(B.allowPageScroll===undefined&&(B.swipe!==undefined||B.swipeStatus!==undefined))){B.allowPageScroll=l}if(B.click!==undefined&&B.tap===undefined){B.tap=B.click}if(!B){B={}}B=e.extend({},e.fn.swipe.defaults,B);return this.each(function(){var D=e(this);var C=D.data(y);if(!C){C=new z(this,B);D.data(y,C)}})}function z(a0,aq){var av=(a||!aq.fallbackToMouseEvents),G=av?"touchstart":"mousedown",au=av?"touchmove":"mousemove",R=av?"touchend":"mouseup",P=av?null:"mouseleave",az="touchcancel";var ac=0,aL=null,Y=0,aX=0,aV=0,D=1,am=0,aF=0,J=null;var aN=e(a0);var W="start";var T=0;var aM=null;var Q=0,aY=0,a1=0,aa=0,K=0;var aS=null;try{aN.bind(G,aJ);aN.bind(az,a5)}catch(ag){e.error("events not supported "+G+","+az+" on jQuery.swipe")}this.enable=function(){aN.bind(G,aJ);aN.bind(az,a5);return aN};this.disable=function(){aG();return aN};this.destroy=function(){aG();aN.data(y,null);return aN};this.option=function(a8,a7){if(aq[a8]!==undefined){if(a7===undefined){return aq[a8]}else{aq[a8]=a7}}else{e.error("Option "+a8+" does not exist on jQuery.swipe.options")}return null};function aJ(a9){if(ax()){return}if(e(a9.target).closest(aq.excludedElements,aN).length>0){return}var ba=a9.originalEvent?a9.originalEvent:a9;var a8,a7=a?ba.touches[0]:ba;W=f;if(a){T=ba.touches.length}else{a9.preventDefault()}ac=0;aL=null;aF=null;Y=0;aX=0;aV=0;D=1;am=0;aM=af();J=X();O();if(!a||(T===aq.fingers||aq.fingers===h)||aT()){ae(0,a7);Q=ao();if(T==2){ae(1,ba.touches[1]);aX=aV=ap(aM[0].start,aM[1].start)}if(aq.swipeStatus||aq.pinchStatus){a8=L(ba,W)}}else{a8=false}if(a8===false){W=p;L(ba,W);return a8}else{ak(true)}return null}function aZ(ba){var bd=ba.originalEvent?ba.originalEvent:ba;if(W===g||W===p||ai()){return}var a9,a8=a?bd.touches[0]:bd;var bb=aD(a8);aY=ao();if(a){T=bd.touches.length}W=j;if(T==2){if(aX==0){ae(1,bd.touches[1]);aX=aV=ap(aM[0].start,aM[1].start)}else{aD(bd.touches[1]);aV=ap(aM[0].end,aM[1].end);aF=an(aM[0].end,aM[1].end)}D=a3(aX,aV);am=Math.abs(aX-aV)}if((T===aq.fingers||aq.fingers===h)||!a||aT()){aL=aH(bb.start,bb.end);ah(ba,aL);ac=aO(bb.start,bb.end);Y=aI();aE(aL,ac);if(aq.swipeStatus||aq.pinchStatus){a9=L(bd,W)}if(!aq.triggerOnTouchEnd||aq.triggerOnTouchLeave){var a7=true;if(aq.triggerOnTouchLeave){var bc=aU(this);a7=B(bb.end,bc)}if(!aq.triggerOnTouchEnd&&a7){W=ay(j)}else{if(aq.triggerOnTouchLeave&&!a7){W=ay(g)}}if(W==p||W==g){L(bd,W)}}}else{W=p;L(bd,W)}if(a9===false){W=p;L(bd,W)}}function I(a7){var a8=a7.originalEvent;if(a){if(a8.touches.length>0){C();return true}}if(ai()){T=aa}a7.preventDefault();aY=ao();Y=aI();if(a6()){W=p;L(a8,W)}else{if(aq.triggerOnTouchEnd||(aq.triggerOnTouchEnd==false&&W===j)){W=g;L(a8,W)}else{if(!aq.triggerOnTouchEnd&&a2()){W=g;aB(a8,W,x)}else{if(W===j){W=p;L(a8,W)}}}}ak(false);return null}function a5(){T=0;aY=0;Q=0;aX=0;aV=0;D=1;O();ak(false)}function H(a7){var a8=a7.originalEvent;if(aq.triggerOnTouchLeave){W=ay(g);L(a8,W)}}function aG(){aN.unbind(G,aJ);aN.unbind(az,a5);aN.unbind(au,aZ);aN.unbind(R,I);if(P){aN.unbind(P,H)}ak(false)}function ay(bb){var ba=bb;var a9=aw();var a8=aj();var a7=a6();if(!a9||a7){ba=p}else{if(a8&&bb==j&&(!aq.triggerOnTouchEnd||aq.triggerOnTouchLeave)){ba=g}else{if(!a8&&bb==g&&aq.triggerOnTouchLeave){ba=p}}}return ba}function L(a9,a7){var a8=undefined;if(F()||S()){a8=aB(a9,a7,k)}else{if((M()||aT())&&a8!==false){a8=aB(a9,a7,s)}}if(aC()&&a8!==false){a8=aB(a9,a7,i)}else{if(al()&&a8!==false){a8=aB(a9,a7,b)}else{if(ad()&&a8!==false){a8=aB(a9,a7,x)}}}if(a7===p){a5(a9)}if(a7===g){if(a){if(a9.touches.length==0){a5(a9)}}else{a5(a9)}}return a8}function aB(ba,a7,a9){var a8=undefined;if(a9==k){aN.trigger("swipeStatus",[a7,aL||null,ac||0,Y||0,T]);if(aq.swipeStatus){a8=aq.swipeStatus.call(aN,ba,a7,aL||null,ac||0,Y||0,T);if(a8===false){return false}}if(a7==g&&aR()){aN.trigger("swipe",[aL,ac,Y,T]);if(aq.swipe){a8=aq.swipe.call(aN,ba,aL,ac,Y,T);if(a8===false){return false}}switch(aL){case o:aN.trigger("swipeLeft",[aL,ac,Y,T]);if(aq.swipeLeft){a8=aq.swipeLeft.call(aN,ba,aL,ac,Y,T)}break;case n:aN.trigger("swipeRight",[aL,ac,Y,T]);if(aq.swipeRight){a8=aq.swipeRight.call(aN,ba,aL,ac,Y,T)}break;case d:aN.trigger("swipeUp",[aL,ac,Y,T]);if(aq.swipeUp){a8=aq.swipeUp.call(aN,ba,aL,ac,Y,T)}break;case v:aN.trigger("swipeDown",[aL,ac,Y,T]);if(aq.swipeDown){a8=aq.swipeDown.call(aN,ba,aL,ac,Y,T)}break}}}if(a9==s){aN.trigger("pinchStatus",[a7,aF||null,am||0,Y||0,T,D]);if(aq.pinchStatus){a8=aq.pinchStatus.call(aN,ba,a7,aF||null,am||0,Y||0,T,D);if(a8===false){return false}}if(a7==g&&a4()){switch(aF){case c:aN.trigger("pinchIn",[aF||null,am||0,Y||0,T,D]);if(aq.pinchIn){a8=aq.pinchIn.call(aN,ba,aF||null,am||0,Y||0,T,D)}break;case w:aN.trigger("pinchOut",[aF||null,am||0,Y||0,T,D]);if(aq.pinchOut){a8=aq.pinchOut.call(aN,ba,aF||null,am||0,Y||0,T,D)}break}}}if(a9==x){if(a7===p||a7===g){clearTimeout(aS);if(V()&&!E()){K=ao();aS=setTimeout(e.proxy(function(){K=null;aN.trigger("tap",[ba.target]);if(aq.tap){a8=aq.tap.call(aN,ba,ba.target)}},this),aq.doubleTapThreshold)}else{K=null;aN.trigger("tap",[ba.target]);if(aq.tap){a8=aq.tap.call(aN,ba,ba.target)}}}}else{if(a9==i){if(a7===p||a7===g){clearTimeout(aS);K=null;aN.trigger("doubletap",[ba.target]);if(aq.doubleTap){a8=aq.doubleTap.call(aN,ba,ba.target)}}}else{if(a9==b){if(a7===p||a7===g){clearTimeout(aS);K=null;aN.trigger("longtap",[ba.target]);if(aq.longTap){a8=aq.longTap.call(aN,ba,ba.target)}}}}}return a8}function aj(){var a7=true;if(aq.threshold!==null){a7=ac>=aq.threshold}return a7}function a6(){var a7=false;if(aq.cancelThreshold!==null&&aL!==null){a7=(aP(aL)-ac)>=aq.cancelThreshold}return a7}function ab(){if(aq.pinchThreshold!==null){return am>=aq.pinchThreshold}return true}function aw(){var a7;if(aq.maxTimeThreshold){if(Y>=aq.maxTimeThreshold){a7=false}else{a7=true}}else{a7=true}return a7}function ah(a7,a8){if(aq.allowPageScroll===l||aT()){a7.preventDefault()}else{var a9=aq.allowPageScroll===r;switch(a8){case o:if((aq.swipeLeft&&a9)||(!a9&&aq.allowPageScroll!=A)){a7.preventDefault()}break;case n:if((aq.swipeRight&&a9)||(!a9&&aq.allowPageScroll!=A)){a7.preventDefault()}break;case d:if((aq.swipeUp&&a9)||(!a9&&aq.allowPageScroll!=t)){a7.preventDefault()}break;case v:if((aq.swipeDown&&a9)||(!a9&&aq.allowPageScroll!=t)){a7.preventDefault()}break}}}function a4(){var a8=aK();var a7=U();var a9=ab();return a8&&a7&&a9}function aT(){return !!(aq.pinchStatus||aq.pinchIn||aq.pinchOut)}function M(){return !!(a4()&&aT())}function aR(){var ba=aw();var bc=aj();var a9=aK();var a7=U();var a8=a6();var bb=!a8&&a7&&a9&&bc&&ba;return bb}function S(){return !!(aq.swipe||aq.swipeStatus||aq.swipeLeft||aq.swipeRight||aq.swipeUp||aq.swipeDown)}function F(){return !!(aR()&&S())}function aK(){return((T===aq.fingers||aq.fingers===h)||!a)}function U(){return aM[0].end.x!==0}function a2(){return !!(aq.tap)}function V(){return !!(aq.doubleTap)}function aQ(){return !!(aq.longTap)}function N(){if(K==null){return false}var a7=ao();return(V()&&((a7-K)<=aq.doubleTapThreshold))}function E(){return N()}function at(){return((T===1||!a)&&(isNaN(ac)||ac===0))}function aW(){return((Y>aq.longTapThreshold)&&(ac<q))}function ad(){return !!(at()&&a2())}function aC(){return !!(N()&&V())}function al(){return !!(aW()&&aQ())}function C(){a1=ao();aa=event.touches.length+1}function O(){a1=0;aa=0}function ai(){var a7=false;if(a1){var a8=ao()-a1;if(a8<=aq.fingerReleaseThreshold){a7=true}}return a7}function ax(){return !!(aN.data(y+"_intouch")===true)}function ak(a7){if(a7===true){aN.bind(au,aZ);aN.bind(R,I);if(P){aN.bind(P,H)}}else{aN.unbind(au,aZ,false);aN.unbind(R,I,false);if(P){aN.unbind(P,H,false)}}aN.data(y+"_intouch",a7===true)}function ae(a8,a7){var a9=a7.identifier!==undefined?a7.identifier:0;aM[a8].identifier=a9;aM[a8].start.x=aM[a8].end.x=a7.pageX||a7.clientX;aM[a8].start.y=aM[a8].end.y=a7.pageY||a7.clientY;return aM[a8]}function aD(a7){var a9=a7.identifier!==undefined?a7.identifier:0;var a8=Z(a9);a8.end.x=a7.pageX||a7.clientX;a8.end.y=a7.pageY||a7.clientY;return a8}function Z(a8){for(var a7=0;a7<aM.length;a7++){if(aM[a7].identifier==a8){return aM[a7]}}}function af(){var a7=[];for(var a8=0;a8<=5;a8++){a7.push({start:{x:0,y:0},end:{x:0,y:0},identifier:0})}return a7}function aE(a7,a8){a8=Math.max(a8,aP(a7));J[a7].distance=a8}function aP(a7){if(J[a7]){return J[a7].distance}return undefined}function X(){var a7={};a7[o]=ar(o);a7[n]=ar(n);a7[d]=ar(d);a7[v]=ar(v);return a7}function ar(a7){return{direction:a7,distance:0}}function aI(){return aY-Q}function ap(ba,a9){var a8=Math.abs(ba.x-a9.x);var a7=Math.abs(ba.y-a9.y);return Math.round(Math.sqrt(a8*a8+a7*a7))}function a3(a7,a8){var a9=(a8/a7)*1;return a9.toFixed(2)}function an(){if(D<1){return w}else{return c}}function aO(a8,a7){return Math.round(Math.sqrt(Math.pow(a7.x-a8.x,2)+Math.pow(a7.y-a8.y,2)))}function aA(ba,a8){var a7=ba.x-a8.x;var bc=a8.y-ba.y;var a9=Math.atan2(bc,a7);var bb=Math.round(a9*180/Math.PI);if(bb<0){bb=360-Math.abs(bb)}return bb}function aH(a8,a7){var a9=aA(a8,a7);if((a9<=45)&&(a9>=0)){return o}else{if((a9<=360)&&(a9>=315)){return o}else{if((a9>=135)&&(a9<=225)){return n}else{if((a9>45)&&(a9<135)){return v}else{return d}}}}}function ao(){var a7=new Date();return a7.getTime()}function aU(a7){a7=e(a7);var a9=a7.offset();var a8={left:a9.left,right:a9.left+a7.outerWidth(),top:a9.top,bottom:a9.top+a7.outerHeight()};return a8}function B(a7,a8){return(a7.x>a8.left&&a7.x<a8.right&&a7.y>a8.top&&a7.y<a8.bottom)}}}));

        // Mouse wheel 3.0.6 :
        (function(a){function d(b){var c=b||window.event,d=[].slice.call(arguments,1),e=0,f=!0,g=0,h=0;return b=a.event.fix(c),b.type="mousewheel",c.wheelDelta&&(e=c.wheelDelta/120),c.detail&&(e=-c.detail/3),h=e,c.axis!==undefined&&c.axis===c.HORIZONTAL_AXIS&&(h=0,g=-1*e),c.wheelDeltaY!==undefined&&(h=c.wheelDeltaY/120),c.wheelDeltaX!==undefined&&(g=-1*c.wheelDeltaX/120),d.unshift(b,e,g,h),(a.event.dispatch||a.event.handle).apply(this,d)}var b=["DOMMouseScroll","mousewheel"];if(a.event.fixHooks)for(var c=b.length;c;)a.event.fixHooks[b[--c]]=a.event.mouseHooks;a.event.special.mousewheel={setup:function(){if(this.addEventListener)for(var a=b.length;a;)this.addEventListener(b[--a],d,!1);else this.onmousewheel=d},teardown:function(){if(this.removeEventListener)for(var a=b.length;a;)this.removeEventListener(b[--a],d,!1);else this.onmousewheel=null}},a.fn.extend({mousewheel:function(a){return a?this.bind("mousewheel",a):this.trigger("mousewheel")},unmousewheel:function(a){return this.unbind("mousewheel",a)}})})(jQuery)

    },
    init: function() {

        var $that = this;

        this.extend();
        this.library();

        $(function () {

            $that.other();

            $that.header();
            $that.navigation();
            $that.page_header();

            $that.shortcodes.slider();

            $that.features.lightbox();
            $that.features.tooltip();
            $that.features.grid();
            $that.features.form();
            $that.features.animate();

            $that.shortcodes.teaser();
            $that.shortcodes.alertsMessages();
            $that.shortcodes.testimonial();
            $that.shortcodes.tab(window, jQuery);
            $that.shortcodes.accordion(window, jQuery);
            $that.shortcodes.carousel();
            $that.shortcodes.media();
        });

    },
    header: function() {

        // Header defaults
        var $header = $('#header'),
            header = {
                nav    : $('.navbar:not(.parallax-off) #main-menu > li'),
                navbar : $('.navbar:not(.parallax-off) .navbar-inner'),
                logo   : $('.navbar:not(.parallax-off) .logo'),
                topbar : $('.topbar')
            },
            items = false,
            t,
            parallax;

        function check_css(target, css) {
            return target.length ?  parseInt(target.removeAttr('style').css(css), 10) : 0;
        }

        // Header parallax function
        function header_init() {


            // Check if non mobile screen
            if ($(window).outerWidth() < $.mobile.width) { items = false; return false; }

            if (items === false) {

                var navBottom     = check_css(header.nav, 'padding-bottom'),
                    navbarTop     = check_css(header.navbar, 'margin-top'),
                    logoHeight    = check_css(header.logo, 'height'),
                    logoTop       = check_css(header.logo, 'margin-top'),
                    topbarHeight  = check_css(header.topbar, 'height'),
                    haderParallax = header.logo.data('parallax');

                items = [{
                    target : header.nav,
                    start  : topbarHeight,
                    css    : 'padding-bottom',
                    max    : navBottom,
                    min    : navBottom / 2,
                    ratio  : 2
                }, {
                    target : header.navbar,
                    start  : topbarHeight,
                    css    : 'margin-top',
                    max    : navbarTop,
                    min    : navbarTop / 2,
                    ratio  : 2
                }, {
                    target : header.topbar,
                    start  : 0,
                    css    : 'margin-top',
                    max    : 0,
                    min    : -1 * topbarHeight,
                    ratio  : 1
                }];

                if (haderParallax) {

                    for (i = 0; i < haderParallax.length; i += 1) {
                        haderParallax[i]['target'] = header.logo;
                        haderParallax[i]['start'] = topbarHeight;
                        haderParallax[i]['ratio'] = 2;
                        items.push(haderParallax[i]);
                    }

                } else {
                    items.push({
                        target : header.logo,
                        start  : topbarHeight,
                        css    : 'height',
                        max    : logoHeight,
                        min    : logoHeight / 1.2,
                        ratio  : 2
                    }, {
                        target : header.logo,
                        start  : topbarHeight,
                        css    : 'margin-top',
                        max    : logoTop,
                        min    : logoTop,
                        ratio  : 2
                    });
                }

                $('#header-space').height($header.height());
            }

            t = $(window).scrollTop();

            // Run parallax script
            $.each(items, function(key, obj) {
                if (obj.max !== obj.min) {
                    if (t - obj.start <= 0) {
                        parallax = obj.max;
                    } else if (t - obj.start >= (obj.max - obj.min) * obj.ratio) {
                        parallax = obj.min;
                    } else {
                        parallax = obj.max - (t - obj.start) / obj.ratio;
                    }
                    obj.target.css(obj.css, parallax);
                }
            });

            // Set scroll class to body
            if (t === 0) { $('html').removeClass('scroll'); } else {
                if (!$('html').is('.scroll')) { $('html').addClass('scroll'); }
            }
        }

        if (!$header.hasClass('sticky-off') && $header.length) {

            $header.after('<div id="header-space"></div>');
            $('#header-space').height($header.addClass('sticky').height());

            // Call
            $(window).scroll(header_init).resizeComplete(header_init, 50, 'ready');
        }
    },
    navigation: function() {
        if ($('#main-menu').length) {
            // Custom menu
            var $customMenu = $('#main-menu.custom'), $customMenuBg;
            if ($customMenu.length) {

                $('#header').append('<div id="custom-nav-bg"></div>');
                $customMenuBg = $('#custom-nav-bg');

                $('body').delegate($customMenu, 'update', function() {

                    var $that = $(this),
                        visibleUl = $('ul.dropdown', $customMenu).filter(function() {
                            return $(this).css('visibility') === 'visible';
                        }).add($('li:hover', $that).children('ul.dropdown')),
                        h = 0,
                        f,
                        b = [],
                        i;

                    if (visibleUl.length) {
                        f = $(visibleUl[0]).offset().top;           // get first children offset top

                        for (i = 0; i < visibleUl.length; i += 1) {
                            b.push($(visibleUl[i]).offset().top + $(visibleUl[i]).outerHeight(true) - f);
                        }

                        h = Math.max.apply(Math, b);                // get MAX height
                    }

                    $customMenuBg.height(h);

                }).delegate($customMenu, 'hide', function() {
                    $customMenuBg.removeAttr('style');
                });

                $(' > li,ul.dropdown > li', $customMenu).on('mouseenter', function() {
                    if ($(window).width() >= $.mobile.width) {
                        $customMenu.trigger('update');
                    }
                });

                $customMenu.on('mouseleave', function() {
                    $(this).trigger('hide');
                });

                $(window).resizeComplete(function() {
                    $customMenu.trigger('hide');
                }, 40);
            }

            // Smart menu
            $(window).resizeComplete(function() {

                if (this.outerWidth < $.mobile.width) {
                    $('#main-menu').find('> li, ul.dropdown').removeClass('rtl').removeAttr('style');
                    return false;
                } else {
                    $('#main-menu').css('height','').removeClass('in');
                }

                var maxLeft = $('.navbar').offset().left + $('.navbar').outerWidth();

                $('#main-menu > li:not(.megamenu)').each(function() {

                    var $that     = $(this),
                        parentOLeft = $that.offset().left,
                        $dropdown = $that.children('ul.dropdown'),
                        depth     = 0,
                        curLeft;

                    $('li:not(:has(ul.dropdown))', $that).each(function() {
                        var cur = $(this).parents('ul.dropdown').length;
                        if (cur > depth) { depth = cur; }
                    });

                    curLeft = parentOLeft + $dropdown.outerWidth();

                    if (curLeft > maxLeft) {
                        $that.addClass('rtl');
                    } else {
                        $that.removeClass('rtl');
                    }

                    if (depth > 1) {
                        curLeft += $('ul.dropdown ul.dropdown', $that).outerWidth();

                        if (curLeft > maxLeft) {
                            $('ul.dropdown', $that).eq(0).addClass('rtl');
                        } else {
                            $('ul.dropdown', $that).eq(0).removeClass('rtl');
                        }
                    }

                });
            }, 50, 'load');

            // Search
            var searchWrap = $("#main-search");
            $(".btn-search").click(function() {

                searchWrap.slideDown(200, 'easeOutQuad', function() {
                    $("form", this).animate({opacity: 1, left: 0}, 200, "easeOutCubic").find(".form-control").focus();
                });

                return false;
            });
            $(".close", searchWrap).click(function() {

                $("form", searchWrap).animate({opacity: 0, left: "20px"}, 200, "easeOutCubic", function() {
                    searchWrap.slideUp(200, 'easeOutQuad');
                    $(this).removeAttr('style');
                }).trigger("reset");

                return false;
            });

            // Open drop down on carret click
            var carret;
            if ($('#main-menu > li > a > .carret').length > 0) {
                carret = true;
            } else {
                carret = false;

                $('#main-menu > li, #main-menu ul.dropdown > li').each(function() {
                    if ($(this).children('ul.dropdown').length) {
                        $(this).children('a').prepend('<i class="carret" style="display:none;"></i>');
                    }
                });
            }

            $(window).resizeComplete(function() {
                if ($(window).outerWidth() < $.mobile.width) {
                    $('#main-menu .carret').show();
                } else {
                    if (!carret) {
                        $('#main-menu .carret').hide();
                    }
                    $('#main-menu .carret').removeClass('rotate');
                    $('#main-menu ul.dropdown').css('display', '');
                }
            }, 20, 'ready');

            $('#main-menu').on('click', 'i.carret, > li > a, .dropdown > li > a', function() {
                if ($(window).outerWidth() < $.mobile.width) {
                    if ($(this).is('.carret')) {
                        $(this).toggleClass('rotate').closest('li').children('ul.dropdown').slideToggle(300, 'easeInOutExpo');
                        return false;
                    } else {
                        if ($(this).parent().children('ul.dropdown').length && $(this).attr('href') == "#") {
                            $(this).children('i.carret').toggleClass('rotate');
                            $(this).closest('li').children('ul.dropdown').slideToggle(300, 'easeInOutExpo');
                            return false;
                        }
                    }

                }
            });

            // Touch menu action
            if ($.mobile.is) {
                var menuLinks = $('#main-menu a');
                menuLinks.on('click', function(event) {
                    if ($(window).width() > $.mobile.width && $(this).parent().children('ul.dropdown').length) {
                        if (!$(this).is('.clicked')) {
                            menuLinks.not(this).removeClass('clicked');
                            $(this).addClass('clicked');
                            event.preventDefault();
                        }
                    }
                });
                $('body > *').on('click', function(event) {
                    if ($(window).width() > $.mobile.width) {
                        if (!$(event.target).parents('#main-menu').length) {
                            menuLinks.removeClass('clicked').off('mouseenter mouseleave');
                        }
                    }

                });
            }

            // Megamenu Category
            if ($('.megamenu-category').length) {

                // Navigate
                $('.category-nav li').on('mouseenter click', function(event) {

                    var $that = $(this);

                    // Check if non mobile screen
                    if ($(window).outerWidth() < $.mobile.width) {

                        if (event.type === 'mouseenter') { return false; }

                        if (!$that.is('.current')) { event.preventDefault(); }
                    } else {

                        // multiple click protection
                        if ($that.is('.current') && event.type === 'mouseenter') { return false; }

                    }

                    // Nav
                    $that.addClass('current').siblings().removeClass('current');

                    // Content
                    $that.closest('.megamenu-category').find('.category-content > div').eq($that.index()).addClass("current").siblings().removeClass("current");
                    $('#main-menu.custom').trigger("update");
                });

            }
            // One Page
            $(window).on('load', function() {
                var $spy = $('body').data('bs.scrollspy');
                if ($spy) {
                    $(window).resizeComplete(function() {
                        $('body').scrollspy('refresh');
                        $spy.options.offset = (this.outerWidth < $.mobile.width) ? 0 : 55;
                    }, 40, 'ready');

                    // Navigate animation
                    $('ul#main-menu a').on('click', function(e) {

                        var $that = $(this),
                            blockID = $that.attr('href'),
                            headerH,
                            toBlock;

                        if (blockID.substring(0, 1) === '#') {

                            e.preventDefault();

                            headerH = ($(window).outerWidth() < $.mobile.width) ? 0 : 55;
                            toBlock = (blockID === '#home') ? 0 : $(blockID).offset().top - headerH + 'px';

                            $that.parent('li').addClass('active').siblings().removeClass('active');

                            $('html,body').animate({
                                scrollTop: toBlock
                            }, 600, 'easeOutQuad');
                        }
                    });
                }
            });
        }
    },
    page_header : function() {

        var parallaxItem = $('#page-header *[class*="hide-to-"]');

        function parallax_init() {

            if ($(window).outerWidth() < $.mobile.width || $.mobile.is) { return false; }

            var windowPosition = $(window).scrollTop();

            parallaxItem.each(function() {

                var $that         = $(this),
                    parallaxStart = 0,
                    parallaxStep  = 300,
                    css;

                if ($that.is('.hide-to-left')) {
                    css = { opacity: [1, 0], right: [0, "100px"] };
                } else if ($that.is('.hide-to-right')) {
                    css = { opacity: [1, 0], left: [0, "100px"] };
                } else if ($that.is('.hide-to-top')) {
                    css = { opacity: [1, 0], bottom: [0, "100px"] };
                } else if ($that.is('.hide-to-bottom')) {
                    css = { opacity: [1, 0], top: [0, "100px"] };
                }

                $.each(css, function(parameter, value) {

                    var type = NaN,
                        i,
                        start = parseInt(value[0], 10),
                        end = parseInt(value[1], 10),
                        parallax;

                    for (i = 0; i < value.length; i += 1) {
                        if (!$.isNumeric(value[i])) {
                            type = value[i].replace(/\d+/g, '').replace('-', '');
                        }
                    }

                    if ($.isNumeric(start) && $.isNumeric(end)) {
                        if (windowPosition - parallaxStart <= 0) {
                            parallax = start;
                        } else if (windowPosition - parallaxStart >= parallaxStep) {
                            parallax = end;
                        } else {
                            parallax = start + (end - start) * ((windowPosition - parallaxStart) / parallaxStep);
                        }
                        $that.css(parameter, type ? parallax + type : parallax);
                    }
                });
            });
        }

        if (parallaxItem.length) {
            // Call
            $(window).scroll(parallax_init).resizeComplete(parallax_init, 50, 'load');
        }

    },
    features : {
        lightbox : function() {

            $('.lightbox').fancybox({
                maxWidth    : 800,
                maxHeight   : 600,
                // autoScale   : false,

                fitToView   : true,
                width       : '70%',
                height      : '70%',
                padding : 0,
                helpers : {
                    title : {
                        type    : 'over'
                    }
                },
                tpl : {
                    closeBtn    : '<a title="Close" class="btn btn-icon-close close" href="javascript:;"></a>',
                    prev        : '<a title="Previous" class="btn btn-icon-prev prev" href="javascript:;"></a>',
                    next        : '<a title="Next" class="btn btn-icon-next next" href="javascript:;"></a>'
                },
                closeSpeed : 150,
                iframe     : {
                    preload : false
                }
            });
        },
        tooltip : function() {

            $("*[data-toggle=tooltip]").tooltip();

        },
        grid : function() {

            var grid = $('.grid');

            if (grid.length) {

                var filter = $('.project-filter'), filterTimeout;

                if (filter.hasClass('animated')) {

                    // slideToggleHor setUp
                    $('a', filter).hide();

                    $.fn.slideHorShow = function(speed, easing, callback) {
                        this.animate({
                            marginLeft      : 'show',
                            marginRight     : 'show',
                            paddingLeft     : 'show',
                            paddingRight    : 'show',
                            width           : 'show'
                        }, speed, easing, callback);
                    };
                    $.fn.slideHorHide = function(speed, easing, callback) {
                        this.animate({
                            marginLeft      : 'hide',
                            marginRight     : 'hide',
                            paddingLeft     : 'hide',
                            paddingRight    : 'hide',
                            width           : 'hide'
                        }, speed, easing, callback);
                    };

                    // show/hide/click filter
                    $('ul', filter).hover(function() {
                        var $that = this;
                        filterTimeout = setTimeout(function() {
                            $('a', $that).stop(true, true).slideHorShow(200, 'easeOutQuad');
                        }, 100);
                    }, function() {
                        clearTimeout(filterTimeout);
                        $('a', this).stop(true, true).slideHorHide(200, 'easeOutQuad');
                    });
                }

                filter.on('click', 'a', function() {

                    if ($(this).is('.active')) { return false; }

                    var o = $(this).attr('data-categories'),
                        grid = $(this).closest('.project-filter').data('grid');
                    $('.project-filter-current').text((o === '*') ? 'All' : o);
                    $(this).addClass('active').parent('li').siblings().find('a').removeClass('active');
                    if (o) {
                        o = (o === '*') ? '*' : '.' + o;
                        $(grid).isotope({ filter : o });
                    }
                    return false;
                });

                $(window).resizeComplete(function() {
                    grid.each(function() {

                        var $that   = $(this),
                            $wrap = $that.closest('.grid-wrap'),
                            defaults = {
                                layoutMode: 'masonry',
                                gutterWidth : 30
                            },
                            options   = $that.data('options'),
                            config    = (options !== undefined) ? $.extend(true, defaults, options) : defaults,
                            col       = parseFloat($that.data('columns'), 10),
                            gridWidth = $wrap.width(),
                            gutter    = config.gutterWidth,
                            columns;

                        // get grid width
                        col = col || 5;

                        if (gridWidth < 1201 && gridWidth >= 900 && col > 4) { // bigger than content
                            columns = 4;
                        } else if (gridWidth < 900 && gridWidth >= 728 && col > 3) { // iPad horizontal full width
                            columns = 3;
                        } else if (gridWidth < 728 && gridWidth >= 480 && col > 2) { // iPhone horizontal full width
                            columns = 2;
                        } else if (gridWidth < 480 && col > 1) { // other phones horizontal full width
                            columns = 1;
                        } else { columns = col; }

                        /* Prepare grid */
                        $that.css({
                            marginTop : -1 * gutter + 'px',
                            marginLeft : -1 * gutter + 'px'
                        }).children().css({
                            width : Math.floor((gridWidth - gutter * (columns - 1)) / columns) + 'px',
                            marginTop : gutter + 'px',
                            marginLeft : gutter + 'px'
                        });

                        $that.isotope(config);
                        $('.slider, video.fc-media, audio.fc-media, iframe[height="100%"]', $that).trigger('updateSizes');

                        if (!$wrap.hasClass('created')) {
                            $wrap.addClass('created').animate({opacity:1}, 500);
                        }

                        $that.isotope('layout');

                    });
                }, 50, 'load');
            }
        },
        form : function() {

            $('.form-datepicker').datepicker();


            /* :: Placeholder :: */
            $('.placeholder > .form-control').focus(function() {

                $(this).parent().addClass('focus');

            }).focusout(function() {

                $(this).parent().removeClass('focus');

            }).bind('change keyup input', function() {

                if ($(this).val() !== '') {
                    $(this).parent().addClass('keyup');
                } else {
                    $(this).parent().removeClass('keyup');
                }

            }).blur(function() {
                if ($(this).val() === '') {
                    $(this).removeClass('error').closest('.form-field').find('.text-error').remove();
                }
            });

            var $form = $('form.form-validate');

            if ($form.length) {

                jQuery.validator.setDefaults({
                    success: function(label, field) {

                        var $parent = $(field).parent('.placeholder');

                        if ($parent.length) {
                            $parent.parent().find('.text-error').remove();
                        } else {
                            $(field).parent().find('.text-error').remove();
                        }
                    },
                    errorPlacement: function(error, field) {

                        var $parent = $(field).parent('.placeholder');

                        if ($parent.length) {
                            $parent = $parent.parent();
                            $parent.find('.text-error').remove();
                            $parent.append('<span class="text-error">' + error.text() + '</span>');
                        } else {
                            $parent = $(field).parent();
                            $parent.find('.text-error').remove();
                            $parent.append('<span class="text-error">' + error.text() + '</span>');
                        }
                    },
                    submitHandler: function(form) {

                        if ($(form).is('#contact-form')) { $(form).parent('.form-inner').addClass('sending'); }

                        if ($(form).data('submit') === 'ajax' || $(form).is('#contact-form')) {

                            $.ajax({
                                type    : $(form).attr('method'),
                                url     : $(form).attr('action'),
                                data    : $(form).serialize(),
                                dataType: 'json',
                                success : function(data) {

                                    var f = $(form).validate();

                                    if ($(form).is('#contact-form')) { $(form).parent('.form-inner').removeClass('sending'); }

                                    // Show response
                                    $(form).append('<div class="response ' + data.response + '">' + data.text + '</div>');

                                    // Reset form
                                    if (data.response === 'success') {
                                        $(form)[0].reset();
                                        f.prepareForm();
                                        f.hideErrors();
                                        f.resetForm();
                                        $('.placeholder > .form-control', form).change().blur();
                                    }

                                    // Hide response
                                    setTimeout(function() {
                                        $('.response', $(form)).animate({left: '-15px', opacity: 0}, 300, 'easeInOutExpo', function() {
                                            $(this).slideUp(400, 'easeInOutExpo', function() {
                                                $(this).remove();
                                            });
                                        });
                                    }, 5000);
                                }
                            });

                        } else {
                            form.submit();
                        }
                    }
                });
                $form.each(function() {
                    $(this).validate();
                });
            }
        },
        animate : function() {
            var animatePosition, delay;
            if ($.mobile.is || $.browser.msie === 'ie9') {
                $('*[data-animate]').addClass('animated done');
            } else {
                $('*[data-animate]').not('.animated').isOnScreen(function() {

                    var $that = $(this),
                        effect = $that.data('animate'),
                        offset = $that.offset().top;

                    if (animatePosition !== offset) {
                        animatePosition = offset;
                        delay = 0;
                    } else {
                        delay += 1;

                        $that.css({
                            '-webkit-animation-delay': delay * 0.1 + 's',
                            'animation-delay': delay * 0.1 + 's'
                        });
                    }

                    $that.addClass(effect + ' animated');
                    setTimeout(function() {
                        $that.removeClass(effect).addClass('done');
                    }, 2000);
                });
            }
        }
    },
    shortcodes : {
        teaser : function() {

            var teaser = $('.teaser');

            if (teaser.length) {
                $(window).resizeComplete(function() {
                    teaser.each(function() {
                        var $that = $('.teaser-info', $(this));
                        $that.css({marginTop: $that.height() / -2 + 'px'});
                    });
                }, 50, 'load');
            }
        },
        alertsMessages : function() {

            $('.alert .close').click(function() {
                $(this).closest('.alert').animate({left: '-50px', opacity: 0}, 300, 'easeInOutExpo', function() {
                    $(this).slideUp(400, 'easeInOutExpo', function() {
                        $(this).remove();
                    });
                });

                return false;
            });
        },
        testimonial : function() {

            var testimonial = $('.testimonial');

            if (testimonial.length) {
                // Init testimonials
                testimonial.carouFredSel({
                    auto        : function() {
                        return $(this).attr('data-auto') === 'true' ? true : false;
                    },
                    pagination  : {
                        container: function() {
                            return $(this).closest('.testimonial-wrap').find('.testimonial-pagi');
                        },
                        anchorBuilder: function(nr, item) {
                            return '<a href="#' + nr + '">' + nr + '</a>';
                        }
                    },
                    prev        : {
                        button  : function() {
                            return $(this).closest('.testimonial-wrap').find('a.prev');
                        }
                    },
                    next        : {
                        button  : function() {
                            return $(this).closest('.testimonial-wrap').find('a.next');
                        }
                    },
                    scroll : {
                        fx          : 'crossfade',
                        duration    : 800,
                        onBefore: function(data) {

                            var $that           = $(this),
                                testWrap        = $that.closest('.testimonial-wrap'),
                                testHeadingCur  = $('.testimonial-heading.current', testWrap),
                                testHeadingNew  = $('.testimonial-heading', data.items.visible);

                            testHeadingCur.animate({
                                left    : (data.scroll.direction === 'next') ? '20px' : '-20px',
                                opacity : 0
                            }, 400, 'easeInOutBack');

                            testHeadingNew.clone().appendTo(testWrap).css({
                                left: (data.scroll.direction === 'next') ? '-20px' : '20px'
                            }).delay(250).animate({
                                left    : 0,
                                opacity : 1
                            }, 400, 'easeOutCirc', function() {
                                testHeadingCur.remove();
                                $(this).addClass('current').removeAttr('style');
                            });
                        }
                    },
                    width       : '100%',
                    height      : 'variable',
                    responsive  : true,
                    items       : {
                        width : 100,
                        height: 'variable'
                    },
                    onCreate    : function(data) {

                        // Variables
                        var $that       = $(this),
                            testWrap    = $that.parents('.testimonial-wrap');

                        // Process
                        testWrap.append($('.testimonial-heading', data.items[0]).clone().addClass('current')).css({
                            overflow    : 'visible',
                            height      : 'auto'
                        }).animate({
                            opacity     : 1
                        }, 500);
                    }
                }, {
                    debug : false,
                    wrapper     : {
                        classname : 'testimonial-inner'
                    }
                });

            }
        },
        tab : function(window, $) {

            "use strict"; // jshint ;_;

            var Tab = function(element, options) {
                this.init('tab', element, options);
            };

            Tab.prototype = {

                constructor: Tab,

                init: function(type, element, options) {

                    var new_options = {},
                        navs    = $(".tab-heading > li", element),
                        current = $(".tab-heading > li.current", element),
                        tab     = $(".tab-content > div", element),
                        isVertical = $(element).is('.tab-vertical'),
                        opt;

                    $(this).each(function() {
                        $.each(element.attributes, function() {
                            if (this.name.indexOf('data-') !== -1) {
                                var type;

                                if (this.value === 'true') {
                                    type = true;
                                } else if (this.value === 'false') {
                                    type = false;
                                } else {
                                    type = this.value;
                                }
                                new_options[this.name.replace('data-', '')] = type;
                            }
                        });
                    });

                    opt = $.extend({}, $.fn[type].defaults, new_options);

                    $(function() {

                        var active;
                        if (current.length > 1) {
                            current.each(function(i) {
                                if (i === 0) {
                                    active = $(current.get(0)).index();
                                } else {
                                    $(this).removeClass('current');
                                }
                            });
                        } else if (current.length === 1) {
                            active = $(current.get(0)).index();
                        } else {
                            active = 0;
                            navs.eq(active).addClass('current');
                        }

                        tab.each(function(i) {
                            if (i === active) {
                                $(this).addClass('current');
                            } else {
                                $(this).removeClass('current');
                            }
                        });

                    });

                    $('a', navs).click(function(e) {
                        e.preventDefault();
                    });

                    $(navs).click(function() {

                        // multiple click protection
                        if ($(element).is('.active')) { return false; }

                        // multiple click protection
                        if ($(this).is('.current')) { return false; }

                        $(this).addClass('current').siblings().removeClass('current');

                        var next = $(this).index(),
                            prev = $(".tab-content > div:visible", element).index(),
                            to,
                            from;

                        if (opt.animation === 'fade' || opt.animation === 'slide') {

                            if (opt.animation === 'fade') {
                                to   = {opacity: 0};
                                from = {opacity: 0};
                            } else {
                                if (prev > next) {
                                    to      = isVertical ? {opacity: 0, top: '30px'} : {opacity: 0, left: '30px'};
                                    from    = isVertical ? {opacity: 0, top: '-30px'} : {opacity: 0, left: '-30px'};
                                } else {
                                    to      = isVertical ? {opacity: 0, top: '-30px'} : {opacity: 0, left: '-30px'};
                                    from    = isVertical ? {opacity: 0, top: '30px'} : {opacity: 0, left: '30px'};
                                }
                            }

                            $(element).addClass('active');
                            $('.tab-content > div:visible', element).animate(to, opt.speed, 'easeInOutBack', function() {
                                $(this).hide().removeClass('current').removeAttr('style');

                                tab.eq(next).show().css(from).animate({opacity: 1, left: 0, top: 0}, opt.speed, 'easeOutCirc', function() {
                                    $(element).removeClass('active');
                                    $(this).removeAttr('style');
                                }).addClass('current');

                            });

                        } else {
                            tab.eq(next).css({display: 'block', opacity: 1}).siblings().css({display: 'none', opacity: 0});
                        }
                    });
                }
            };

            $.fn.tab = function(option) {
                return this.each(function() {
                    var $this = $(this),
                        data = $this.data('tab'),
                        options = typeof option === 'object' && option;
                    if (!data) {
                        data = new Tab(this, options);
                        $this.data('tab', data);
                    }
                    if (typeof option === 'string') { data[option](); }
                });
            };

            $.fn.tab.Constructor = Tab;

            $.fn.tab.defaults = {
                fwnavs    : false,
                animation : 'fade',
                speed     : 250
            };

            $('.tab').tab();

        },
        accordion : function(window, $) {

            "use strict"; // jshint ;_;

            var Accordion = function(element, options) {
                this.init('accordion', element, options);
            };

            Accordion.prototype = {

                constructor: Accordion,

                init: function(type, element, options) {

                    var new_options = {},
                        heading = $('div > .accordion-heading', element),
                        opt;

                    $(this).each(function() {
                        $.each(element.attributes, function() {
                            if (this.specified) {
                                if (this.name.indexOf('data-') !== -1) {
                                    var type;

                                    if (this.value === 'true') {
                                        type = true;
                                    } else if (this.value === 'false') {
                                        type = false;
                                    } else {
                                        type = this.value;
                                    }
                                    new_options[this.name.replace('data-', '')] = type;
                                }
                            }
                        });
                    });

                    opt = $.extend({}, $.fn[type].defaults, new_options);

                    $(heading).click(function() {

                        var block   = $(this).parent(),
                            content = $('.accordion-content', block);

                        if (block.is('.active')) {
                            content.css('display','block').slideUp(opt.speed, 'easeInOutExpo').parent().removeClass('active');
                        } else {
                            if (opt.toggle === true) {
                                content.css('display','none').slideDown(opt.speed, 'easeInOutExpo').parent().addClass('active').siblings('.active').removeClass('active').children('.accordion-content').css('display','block').slideUp(opt.speed, 'easeInOutExpo');
                            } else {
                                content.css('display','none').slideDown(opt.speed, 'easeInOutExpo').parent().addClass('active');
                            }
                        }
                    });
                    $("a", heading).click(function(e) {
                        e.preventDefault();
                    });
                }
            };

            $.fn.accordion = function(option) {
                return this.each(function() {
                    var $this = $(this),
                        data = $this.data('accordion'),
                        options = typeof option === 'object' && option;
                    if (!data) {
                        data = new Accordion(this, options);
                        $this.data('accordion', data);
                    }
                    if (typeof option === 'string') { data[option](); }
                });
            };

            $.fn.accordion.Constructor = Accordion;

            $.fn.accordion.defaults = {
                toggle: false,
                speed: 400
            };

            $(".accordion").accordion();

        },
        slider : function() {
            $(window).on('load', function() {
                var slider = $('.slider');

                if (slider.length) {
                    slider.each(function() {

                        var $that = $(this);

                        $that.wrap('<div class="slider-wrap"></div>').closest('.slider-wrap').prepend('<ul class="slider-nav"><li><a href="#" class="btn btn-icon-prev prev"></a></li><li><a href="#" class="btn btn-icon-next next"></a></li></ul>').find('.slider').carouFredSel({
                            auto        : {
                                play            : $that.attr('data-auto') === 'true' ? true : false,
                                timeoutDuration : $that.attr('data-duration') !== '' ? parseInt($that.attr('data-duration'), 10)  : 1000
                            },
                            scroll : {
                                fx      : $that.attr('data-animation') === 'scroll' ? 'scroll' : 'crossfade'
                            },
                            prev        : {
                                button  : function() {
                                    return $that.closest('.slider-wrap').find('a.prev');
                                }
                            },
                            next        : {
                                button  : function() {
                                    return $that.closest('.slider-wrap').find('a.next');
                                }
                            },
                            width       : '100%',
                            height      : 'variable',
                            responsive  : true,
                            items       : {
                                width : 100,
                                height: 'variable'
                            },
                            onCreate    : function(data) {
                                if (!$that.parents('.carousel, .grid').length) {
                                    $that.closest('.slider-wrap').addClass('created');
                                }
                            },
                            pagination  : {
                                anchorBuilder: function(nr, item) {
                                    return '<a href="#' + nr + '">' + nr + '</a>';
                                }
                            }
                        }, {
                            debug : false
                        });

                    }).swipe({
                        swipeLeft: function(event, direction, distance, duration, fingerCount) {
                            $(this).trigger('next');
                        },
                        swipeRight: function(event, direction, distance, duration, fingerCount) {
                            $(this).trigger('prev');
                        }
                    });
                }
            });
        },
        carousel : function() {

            var carousel = $('.carousel');

            function carousel_visible(carousel) {

                var carouselWidth   = carousel.parents('.carousel-wrap').eq(0).width(),
                    visible         = parseFloat(carousel.data('visible'), 10),
                    newCol;

                visible = visible || 5;

                if (carouselWidth < 1201 && carouselWidth >= 984 && visible > 4) { // bigger that content
                    newCol = 4;
                } else if (carouselWidth < 984 && carouselWidth >= 751 && visible > 3) { // iPad horizontal full width
                    newCol = 3;
                } else if (carouselWidth < 751 && carouselWidth >= 480 && visible > 2) { // iPhone horizontal full width
                    newCol = 2;
                } else if (carouselWidth < 488 && visible > 1) { // other phones horizontal full width
                    newCol = 1;
                } else { newCol = visible; }
                return newCol;
            }

            if (carousel.length) {
                $(window).on('load', function() {

                    // Init carousel
                    carousel.wrap('<div class="carousel-outer"><div class="carousel-inner"></div></div>').carouFredSel({
                        auto        : false,
                        prev        : {
                            button  : function() {
                                var btn = $("a.prev[href=" + $(this).attr('id') + "]");
                                return (btn.length) ? btn : $(this).closest('.carousel-wrap').find('.carousel-nav a.prev');
                            }
                        },
                        next        : {
                            button  : function() {
                                var btn = $("a.next[href=" + $(this).attr('id') + "]");
                                return (btn.length) ? btn : $(this).closest('.carousel-wrap').find('.carousel-nav a.next');
                            }
                        },
                        width       : '100%',
                        height      : 'variable',
                        responsive  : true,
                        items       : {
                            width : 100,
                            height: 'variable',
                            visible : function() {
                                return carousel_visible($(this));
                            }
                        },
                        pagination: {
                            container: function() {
                                return $(this).closest('.carousel-wrap').find('.carousel-pagi');
                            }
                        },
                        swipe       : {
                            onMouse : function() {
                                return ($(this).parents('.container-out.container-full-width').length) ? true : false;
                            }
                        },
                        onCreate    : function(data) {

                            var $wrap = $(this).closest('.carousel-wrap');

                            $('.slider, video.fc-media, audio.fc-media, iframe[height="100%"]', $wrap).trigger('updateSizes');

                            $wrap.addClass('created');

                            setTimeout(function(){
                                $wrap.children().animate({opacity:1}, 1000);
                            }, 500);
                        }
                    }, {
                        debug : false
                    }).swipe({
                        swipeLeft: function(event, direction, distance, duration, fingerCount) {
                            $(this).trigger('next');
                        },
                        swipeRight: function(event, direction, distance, duration, fingerCount) {
                            $(this).trigger('prev');
                        }
                    });
                });

                // on Resize actions
                $(window).resizeComplete(function() {
                    carousel.each(function() {
                        $(this).trigger('configuration', ['items.visible', carousel_visible($(this))]).trigger('updateSizes');
                        $('.slider, video.fc-media, audio.fc-media, iframe[height="100%"]', $(this)).trigger('updateSizes');
                    });
                }, 70);

                // Carousel grabbing class
                $('body').on('mousedown', '.container-full-width .caroufredsel_wrapper', function() {
                    $(this).addClass('active');
                });
                $('body').on('mouseup', '.container-full-width .caroufredsel_wrapper', function() {
                    $(this).removeClass('active');
                });

            }
        },
        media : function() {

            var media = $('video.fc-media, audio.fc-media');

            if (media.length) {

                /*  :: Extentions to Mediaelements :: */
                $.extend(mejs.MepDefaults, {
                    audioVolume: 'horizontal',
                    videoVolume: 'horizontal'
                });

                media.mediaelementplayer({
                    audioHeight              : 40,
                    features                 : ['playpause', 'current', 'duration', 'progress', 'volume', 'fullscreen'],
                    alwaysShowControls       : true,
                    timeAndDurationSeparator : '<span> / </span>',
                    iPadUseNativeControls: true,
                    iPhoneUseNativeControls: true,
                    AndroidUseNativeControls: true,
                    success: function (mediaElement, domObject) {
                        $(mediaElement).addClass('created').on('updateSizes', function() {

                            var width, height, el;

                            if ($.mobile.is) {

                                width = $(this).parent().width();
                                height = width * 9 / 16;

                                $(this).height($(this).is('audio') ? 40 : height + 'px');


                            } else {

                                el = $(this).closest('.mejs-container').parent();
                                width = el.width();
                                height = width * this.videoHeight / this.videoWidth;

                                if (width < 300) {
                                    $('.mejs-time', el).hide();
                                } else {
                                    $('.mejs-time', el).show();
                                }

                                this.player.setPlayerSize(width, height);
                                this.player.setControlsSize();
                                this.player.media.setVideoSize(width, height);
                            }

                        });
                        if ($.mobile.is) {
                            $(mediaElement).trigger('updateSizes');
                        }
                    }
                });
            }
            var iframe = $('iframe[height="100%"]');
            if (iframe.length) {

                iframe.on('updateSizes', function () {
                    $(this).addClass('created').height($(this).width() * 9 / 16 + 'px');
                });
                $(window).resizeComplete(function() {
                    iframe.trigger('updateSizes');
                }, 50, 'ready');

            }
        }
    },
    other : function() {
        /* :: :::::::: :: */
        /* :: Counters :: */
        /* :: :::::::: :: */
        var counter =  $('.counter, .skill .bar.animated');
        if (counter.length) {
            counter.isOnScreen(function() {

                var $that   = $(this),
                    min     = parseInt($that.text(), 10),
                    to      = $that.data($that.hasClass('counter') ? 'number' : 'value');

                $({countNum: min}).animate({countNum: to}, {
                    duration: 2000,
                    easing: 'linear',
                    step: function() {
                        if ($that.hasClass('counter')) {
                            $that.text(Math.ceil(this.countNum));
                        } else {
                            $that.text(Math.ceil(this.countNum) + '%');
                        }
                    }
                });
                if (!$that.hasClass('counter')) {
                    $that.css('width', $that.data('value') + '%');
                }

            });
        }

        /* :: ::::::::: :: */
        /* :: Container :: */
        /* :: ::::::::: :: */
        var containerFullWidth = $('body > *:not(#boxed) .container-out.container-full-width');

        if (containerFullWidth.length) {
            // Call
            $(window).resizeComplete(function() {
                containerFullWidth.width($(window).width()).css('margin-left', $('#content').offset().left * -1 + 'px');
            }, 0, 'ready');
        }

        /* :: :::::::::::: :: */
        /* :: Project info :: */
        /* :: :::::::::::: :: */
        var project = $('.project.project-animated');

        if (project.length) {

            project.hover(function() {
                $('.project-content', this).css('bottom', $('.project-content', this).stop().height() * -1).animate({bottom: 0}, 200);
            }, function() {
                $('.project-content', this).stop().animate({bottom: $('.project-content', this).outerHeight(true) * -1}, 200, function() {
                    $(this).removeAttr('style');
                });
            });

        }

        /* :: ::::::: :: */
        /* :: Twitter :: */
        /* :: ::::::: :: */
        var tweets = $('#tweets');
        if (tweets.length) {
            tweets.twitterfeed();
        }

        /* :: :::::: :: */
        /* :: Flickr :: */
        /* :: :::::: :: */
        var flickr = $('#flickr');

        if (flickr.length) {
            flickr.jflickrfeed({
                limit   : 6,
                qstrings: {
                    id: flickr.data('id')
                },
                itemTemplate:   '<li>' +
                                    '<a class="lightbox" href="{{image_b}}" data-fancybox-group="flickr">' +
                                        '<span class="btn btn-icon-view"></span>' +
                                        '<img src="{{image_s}}" alt="{{title}}">' +
                                    '</a>' +
                                '</li>'
            });
        }

        /* :: :::::::::: :: */
        /* :: Scroll top :: */
        /* :: :::::::::: :: */
        $('#toTop').on('click', function() {
            $('html,body').animate({
                scrollTop: 0
            }, 600, 'easeOutQuad');

            return false;
        });

        /* :: :::::::::::::: :: */
        /* :: Register/Login :: */
        /* :: :::::::::::::: :: */
        $('.recovery-open').on('click', function() {

            $('#recovery').css('left', '-30px').slideDown(400, 'easeInOutExpo', function() {
                $(this).animate({left: 0, opacity: 1}, 300, 'easeInOutExpo');
            });

            return false;
        });
        $('.recovery-close').on('click', function() {

            $('#recovery').animate({left: '30px', opacity: 0}, 300, 'easeInOutExpo', function() {
                $(this).slideUp(400, 'easeInOutExpo');
            });

            return false;
        });
        $('.user-nav a').on('click', function() {

            var $that = $(this),
                userTab = $that.attr('href'),
                userTabEq = $that.parent().index();

            $.each(['.tab-heading > li', '.tab-content > div'], function(index, value) {
                $(value, userTab).eq(userTabEq).addClass('current').siblings().removeClass('current');
            });
        });

        /* :: :::::::::::: :: */
        /* :: Side options :: */
        /* :: :::::::::::: :: */
        $('.side-options-heading a').on('click', function() {
            $(this).closest('.side-options').toggleClass('open');
            return false;
        });

        // Language
        $('#language-options .language-list a').on('click', function() {
            var $that = $(this),
                language = $that.data('abbr');

            if ($that.attr('href') == '#') {

                $('#language-options .current-language').text(language);

                $that.addClass('current').parent().siblings().children().removeClass('current').closest('.side-options').removeClass('open');

                return false;
            }

        });

        /* :: :::::::: :: */
        /* :: Timeline :: */
        /* :: :::::::: :: */
        var timeline = $('.timeline');
        if (timeline.length) {
            $('li', timeline).not('.year').each(function(i) {
                $(this).addClass((i % 2 === 0) ? 'even' : 'odd');
            });
        }

        /* :: :::::::: :: */
        /* :: Switcher :: */
        /* :: :::::::: :: */
        $('.to-form, .to-contact').click(function() {

            var formSwitch = ($(this).is('.to-form')) ? ["#content .form", "#content .address" ] : ["#content .address", "#content .form" ];

            $(formSwitch[0]).addClass('current');
            $(formSwitch[1]).removeClass('current');

            return false;
        });

        /* :: :::::::: :: */
        /* :: Comments :: */
        /* :: :::::::: :: */
        var comments    = $('.comments'),
            replyBlock  = $('#reply');

        if (comments.length) {

            // Show comment form
            $('.reply a', comments).click(function() {

                var $that = $(this);

                replyBlock.animate({opacity: 0}, 100, function() {
                    $(this).appendTo($that.closest('.comment')).animate({opacity: 1}, 200);
                });

                return false;
            });

            // Hide comment form
            $('.close', replyBlock).click(function() {

                replyBlock.animate({opacity: 0}, 100, function() {
                    $(this).appendTo($('li', comments).last()).animate({opacity: 1}, 200);
                });

                return false;
            });

            // Scroll to comment form
            $('.comments a.post-comment').click(function() {

                $('html, body').animate({
                    scrollTop: replyBlock.offset().top - 500
                }, 500);
                $('input#name', replyBlock).focus();

                return false;
            });
        }

        $(window).on('load', function() {
            $(this).scroll();
        });
    }
};

Jets.init();